use serviceKnowledge as knowledge.
use service as actionspec.
use buildTerrace as module.
use demolish as module.
use buildConvenienceStore as module.
use buildSportsCenter as module.
use buyLand as module.
use sellLand as module.
use demolish as module.

exit = nogoals.
order = linearall.

% main:
% - states: 5
% - description: The main module. Should run every module in a linear mather, until there ar no goals.
module main{

	if goal (buildTerrace) then buildTerrace.
	if goal (buildStore) then buildConvenienceStore.
	if goal (buildSportsCenter) then buildSportsCenter.

	% description: Make a goal for demolishing.
	% if:
	% - The indicators are not met yet and there is a building from the stakeholder that is not a building needed for the indicator.
	% then:
	% - Adopt demolishbuilding(ID) goal.
	if 	
		goal(buildTerrace; buildStore; buildSportsCenter), 
		bel(stakeholder(StakeholderID, StakeholderName, _, _), 
		StakeholderName=="Voorzieningen", buildings(X), member((BuildingID,_,StakeholderID,_,_,FunctionID,_), X), 
		functions(Y), member((Name, FunctionID, _), Y), Name=\="terrace", Name=\="terras", 
		Name=\="sportcentrum", Name=\="sports center", Name=\="buurtwinkel", Name=\="convenience store") 
	then 
		adopt(demolishBuilding(BuildingID)).
	
	% description: Make a goal for buying
	% if:
	% - The indicators are not met yet and there is no goal for demolishing 
	%   %and there is no land you own where there are no buildings. (this has yet to be implemented by Wouter)
	% then:
	% - Adopt buyLand goal.
	if 	
		goal(buildTerrace; buildStore; buildSportsCenter),
		not(goal(demolishBuilding(_)))
	then 
		adopt(buyLand).
		

	if goal(demolishBuilding(BuildingID)) then demolish(BuildingID).
	if goal(buyLand) then buyLand.
	
}
