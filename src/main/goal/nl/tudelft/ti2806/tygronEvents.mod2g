use serviceKnowledge as knowledge.
use serviceBeliefs as beliefs.

% Tygron Event:
% - states: 9
% - description: Percept Processing
module tygronEvents {
	
	% description: Whenever actions are percepted old actions will be deleted and new actions will be inserted.
	if 
		percept(actions(NewActions)), 
		bel(actions(OldActions)) 
	then 
		delete(actions(OldActions)) + 
		insert(actions(NewActions)).
	
	% description: Whenever logs of actions are percepted old action_logs will be deleted and new action_logs will be inserted.
	if 
		percept(action_logs(NewActionLog)), 
		bel(action_logs(OldActionLog)) 
	then 
		delete(action_logs(OldActionLog)) + 
		insert(action_logs(NewActionLog)).

	% description: Whenever buildings are percepted old buildings will be deleted and new buildings will be inserted.
	if
		percept(buildings(NewBuildings)),
		bel(buildings(OldBuildings))
	then
		delete(buildings(OldBuildings)) +
		insert(buildings(NewBuildings)).
		
	% description: Whenever functions are percepted old functions will be deleted and new functions will be inserted.
	if 
		percept(functions(NewFunctions)), 
		bel(functions(OldFunctions)) 
	then 
		delete(functions(OldFunctions)) + 
		insert(functions(NewFunctions)).
	
	% description: During initialisation the list of indicators are inserted into the belief base. 
	% forall:
	% - indicators where the current value has changed
	% do:
	% - update the indicator
	forall 
		percept(indicators(IndicatorList)), 
		bel(
			indicator(IndicatorID, OldValue, TargetValue, OldZone_LinkList), 
			member(indicator(IndicatorID, CurrentValue, TargetValue, Zone_LinkList),IndicatorList)
		)
	do 
		delete (indicator(IndicatorID, OldValue, TargetValue,OldZone_LinkList)) + 
		insert(indicator(IndicatorID, CurrentValue, TargetValue, Zone_LinkList)).	
	
	% description: Whenever lands are percepted old lands will be deleted and new lands will be inserted.
	if 
		percept(lands(NewLands)), 
		bel(lands(OldLands)) 
	then 
		delete(lands(OldLands)) + 
		insert(lands(NewLands)).
		
	% description: Whenever requests are percepted each request is inserted.
	forall
		percept(requests(RequestList)),
		bel(
			member(request(TypeName, Type, PopupId, PopupContentLinkId, VisibleForStakeholders, ActionLogId, Price, MultiPolygon, Area, Answers), RequestList),
			my_stakeholder_id(StakeholderID),
			member(StakeholderID, VisibleForStakeholders),
			not(request_answered(PopupId))
		)
	do
		insert(request(TypeName, Type, PopupId, PopupContentLinkId, VisibleForStakeholders, ActionLogId, Price, MultiPolygon, Area, Answers)).

	% description: Whenever settings are percepted old settings will be deleted and new settings will be inserted.
	if 
		percept(settings(NewSettings)), 
		bel(settings(OldSettings)) 
	then 
		delete(settings(OldSettings)) + 
		insert(settings(NewSettings)).
	
	% description:Whenever the list of stakeholders is updated all stakeholder/4 beliefs will be updated accordingly.
	% forall:
	% - stakeholders where the income has changed
	% do: 
	% - update the stakeholder
	forall 
		percept(stakeholders(CombinedList)), 
		bel(
			stakeholder(StakeholderId, Name, OldIncome, StartBudget), 
			member(StakeholderList, CombinedList), 
			member(stakeholder(StakeholderId, Name, NewIncome, StartBudget), StakeholderList), 
			not(NewIncome == OldIncome)
		) 
	do 
		delete(stakeholder(StakeholderId, Name, OldIncome, StartBudget)) + 
		insert(stakeholder(StakeholderId, Name, NewIncome, StartBudget)).
	
	% description: Whenever the list of zones is updated all zone/5 beliefs will be updated accordingly.
	% forall:
	% - zones where either the MaxFloors or Allowed_Categories changes 
	% do:
	% - update the zone
	forall 
		percept(zones(ZoneList)), 
		bel(
			zone(ZoneId, ZoneName, OldMaxFloors, Size, OldAllowed_Categories), 
			member(zone(ZoneId, ZoneName, NewMaxFloors, Size, NewAllowed_Categories), ZoneList), 
			(
				not(NewMaxFloors == OldMaxFloors); 
				not(NewAllowed_Categories == OldAllowed_Categories)
			)
		)
	do 
		delete(zone(ZoneId, ZoneName, OldMaxFloors, Size, OldAllowed_Categories)) + 
		insert(zone(ZoneId, ZoneName, NewMaxFloors, Size, NewAllowed_Categories)).
}
