use serviceKnowledge as knowledge.
use service as actionspec.

module request {
	
	% description: if we get an information request answer with OK.
	% if:
	% - you have an information request
	% - it is possible to answer with OK 
	% then:
	% - answer the request with OK.	
	% - remove the request from the belief base
	if
		bel(
			request(Type, RequestType, RequestID, ContentLinkID, VisibleStakeholders, ActionlogIDs, Price, Multipolygon, Area, Answers),
			Type == 'INFORMATION', 
			member(answer(AnswerID, 'OK'), Answers)
		)
	then 
		popup_answer(RequestID, AnswerID) +
		delete(request(Type, RequestType, RequestID, ContentLinkID, VisibleStakeholders, ActionlogIDs, Price, Multipolygon, Area, Answers)).
	
	% description: if we get an interaction request to buy land, answer with Ja, Nee or OK. 
	%				You can only have an OK option if there are no other options.
	% if:
	% - you have an interaction request
	% - this request is to buy some land 
	% then:
	% - if:
	%	- the offered price for the land is good enough
	%	- the owned land is enough to build on 
	%	- it is possible to answer with Ja
	% - then:
	%	- answer with Ja
	%	- delete the request from the belief base
	% - if:
	%	- it is possible to answer with Nee
	% - then:
	%	- answer with Nee
	%	- delete the request from the belief base
	% - if:
	%	- it is possible to answer with OK
	% - then:
	%	- answer with OK
	%	- delete the request from the belief base
	if
		bel( 
			request(Type, RequestType, RequestID, ContentLinkID, VisibleStakeholders, ActionlogIDs, Price, Multipolygon, Area, Answers),
			Type == 'INTERACTION', 
			RequestType == 'BUY_LAND')
			then {
				
			% description:
			% Decide if we want to sell a piece of land
			if
				bel(
					marktprijs(Huidigemarktprijs),
					(Huidigemarktprijs =< Price/Area),
					(member(answer(AnswerID, 'Ja'), Answers)),
					ownedLand(OwnedTotalArea),
					targetLand(NeededTotalArea),
					marginofTotalLand(Margin),
					OwnedTotalArea > (NeededTotalArea * Margin)
				)
			then
				popup_answer(RequestID, AnswerID) +
				delete(request(Type, RequestType, RequestID, ContentLinkID, VisibleStakeholders, ActionlogIDs, Price, Multipolygon, Area, Answers)).
			
			% description:
			% If the Nee option is present and we didn't answer Ja then answer with Nee
			if
				bel(member(answer(AnswerID, 'Nee'), Answers))
			then
				popup_answer(RequestID, AnswerID) +
				delete(request(Type, RequestType, RequestID, ContentLinkID, VisibleStakeholders, ActionlogIDs, Price, Multipolygon, Area, Answers)).
			
			% description:
			% If the OK option is present then answer with that
			if
				bel(member(answer(AnswerID, 'OK'), Answers))
			then
				popup_answer(RequestID, AnswerID) +
				delete(request(Type, RequestType, RequestID, ContentLinkID, VisibleStakeholders, ActionlogIDs, Price, Multipolygon, Area, Answers)).
			
			% TODO: decide if we want to sell this piece of land
			% check if our indicators are met > skipped
			% check if we need land still > done
			% check if price is ok > done
			% check which zone this is request is related to > connector change needed
			% check if we have service buildings on this piece of land
			% check if selling would affect indicators 
}

	% description: if we get an interaction request to sell land, answer with Yes or OK. 
	%				You can only have an OK option if there are no other options.
	% if:
	% - you have an interaction request
	% - this request is to sell some land
	% - it is possible to answer with Yes or OK 
	% - the price per m^2 is below or equal to the price threshold
	% then:
	% - answer the request with Yes or OK.
	% - remove the request from the belief base
	if
		bel(
			request(Type, RequestType, RequestID, ContentLinkID, VisibleStakeholders, ActionlogIDs, Price, Multipolygon, Area, Answers),
			Type == 'INTERACTION', 
			RequestType == 'SELL_LAND',
			(member(answer(AnswerID, 'Ja'), Answers); member(answer(AnswerID, 'OK'), Answers)),
			marktprijs(Huidigemarktprijs),
			(Huidigemarktprijs >= Price/Area)
			% TODO: decide if we want to accept the offer to buy this piece of land
			% based on the price per m^2(done), zone and amount of buildings present/buildable land
		)
	then 
		popup_answer(RequestID, AnswerID) +
		delete(request(Type, RequestType, RequestID, ContentLinkID, VisibleStakeholders, ActionlogIDs, Price, Multipolygon, Area, Answers)).
	
	% description: if we get an interaction request to demolish, answer with Yes or OK. 
	%				You can only have an OK option if there are no other options.
	% if:
	% - you have an interaction request
	% - this request is to demolish
	% - it is possible to answer with Yes or OK 
	% then:
	% - answer the request with Yes or OK.
	% - remove the request from the belief base
	if
		bel(
			request(Type, RequestType, RequestID, ContentLinkID, VisibleStakeholders, ActionlogIDs, Price, Multipolygon, Area, Answers),
			Type == 'INTERACTION', 
			RequestType == 'DEMOLISH',
			(member(answer(AnswerID, 'Ja'), Answers); member(answer(AnswerID, 'OK'), Answers))
		)
	then 
		popup_answer(RequestID, AnswerID) +
		delete(request(Type, RequestType, RequestID, ContentLinkID, VisibleStakeholders, ActionlogIDs, Price, Multipolygon, Area, Answers)).

	% description: if we get an stakeholder_standard request remove it from the belief base. 
	%				Also add request_answered to suppress new handling.
	% if:
	% - you have a request
	% - with type is 'STAKEHOLDER_STANDARD'
	% then:
	% - set the request ID to answered
	% - remove the request from the belief base
	if
		bel(
			request(Type, RequestType, RequestID, ContentLinkID, VisibleStakeholders, ActionlogIDs, Price, Multipolygon, Area, Answers),
			Type == 'STAKEHOLDER_STANDARD'
		)
	then 
		insert(request_answered(RequestID)) +
		delete(request(Type, RequestType, RequestID, ContentLinkID, VisibleStakeholders, ActionlogIDs, Price, Multipolygon, Area, Answers)).
}
