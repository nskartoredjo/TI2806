use serviceKnowledge as knowledge.
use service as actionspec.

exit = always.
order = linearall.

% buildTerrace:
% - states: 2
% - description: Should build a terrace if possible. 
module buildTerrace {
	% description: 
	% - Build first building in the map
	% if:
	% - there is a goal to build a building
	% - there hasn't been build any terrace
	% - there is a building type 'terrace'
	% then:
	% - Build the terrace on a fixed polygon square
	% - insert the belief 'constructed terrace'
	if 
		bel(
			functions(FS), 
			member([Name,FunctionID,L],FS), 
			(Name == 'terrace'; Name == 'terras'), 
			my_stakeholder_id(StakeholderID), 
			indicatorLink(_, IndicatorWeights), 
			member(indicatorWeights(IndicatorID, IndicatorName, _), IndicatorWeights), 
			(IndicatorName == 'Terras Indicator' ; IndicatorName == 'Terras Indicator (2)'),  
			indicator(IndicatorID, _, _, ZoneList),
			maxTodo(ZoneList, Todo, ZoneID), Size is sqrt(Todo)
			
			)	
		then 
		%TODO build action who builds in zoneID with size Todo.
			build_specified_building(StakeholderID, ZoneID, FunctionID, Size, Size, 10) +
			%building_plan_construction(FunctionID, 1, Multipolygon) + 
			insert(
				constructed(FunctionID, Name)
			).
		
	% description: 
	% - should build n+1 buildings if n buildings are build
	% if:
	% - TODO
	% then:
	% - TODO
}
